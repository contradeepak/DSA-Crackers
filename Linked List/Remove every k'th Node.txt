Given a singly linked list, your task is to remove every kth node from the linked list. 

Examples:

Input: Linked list: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8, k = 2
Output: 1 -> 3 -> 5 -> 7

Explanation: After removing every 2nd node of the linked list, the resultant linked list will be: 1 -> 3 -> 5 -> 7.



Solution :


class Solution {
  public:
    Node* deleteK(Node *head, int K) {
        // code here
        
        if(K==1)
        return NULL;
        
        
        
        Node *curr = head, *prev=NULL;
     int count = 1;
        
        
        
        while(curr)
        {
            if(K==count)
            {
                prev->next = curr->next;
                delete curr;
                curr = prev->next;
                count = 1;
            }
            else
            {
                prev = curr;
                curr = curr->next;
                count++;
            }
        }
        
        
        return head;
        
        
        
    }