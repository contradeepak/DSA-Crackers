Given a doubly linked list. Your task is to reverse the doubly linked list and return its head.

Examples:

Input: LinkedList: 3 <-> 4 <-> 5
Output: 5 <-> 4 <-> 3

Input: LinkedList: 75 <-> 122 <-> 59 <-> 196
Output: 196 <-> 59 <-> 122 <-> 75


Solution :

class Solution {
  public:
    // Function to reverse a doubly linked list
    DLLNode* reverseDLL(DLLNode* head) {
        // Your code here
       if(head==NULL || head->next == NULL){
           return head;
       }
       DLLNode* prev = NULL;
       DLLNode* current = head;
       while(current!=NULL){
           prev = current->prev;
           current->prev = current->next;
           current->next = prev;
           current = current->prev;
       }
        
  return prev->prev;
    }